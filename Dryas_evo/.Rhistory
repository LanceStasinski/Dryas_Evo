library(spectrolab)
library(ape)
library(phytools)
library(vegan)
#load spectra, normalize, and take average spectra per individual
spec = readRDS("Data/clean_all.rds")
spec = normalize(spec)
spec.mean = aggregate(spec_all,
by = meta(spec_all)$Name,
mean, try_keep_txt(mean))
#load tree
tree = read.tree(file = "Data/dryas_phylogeny.treefile")
spec = aggregate(spec, by = meta(spec)$Name, mean, try_keep_txt(mean))
install.packages('evolspec')
install.packages('devtools')
install.packages("devtools")
library(devtools)
install.packages('usethis')
library(devtools)
library(devtools)
devtools::install_github("meireles/evolspec")
install.packages('usethis')
install.packages("usethis")
library(usethis)
library(devtools)
install.packages('devtools')
install.packages("devtools")
library(devtools)
devtools::install_github("meireles/evolspec")
install.packages('testthat')
install.packages("testthat")
install.packages("testthat")
install.packages("testthat")
library(spectrolab)
library(ape)
library(phytools)
library(vegan)
library(usethis)
library(testthat)
library(devtools)
devtools::install_github("meireles/evolspec")
install.packages('Rtools')
devtools::install_github("meireles/evolspec")
library(spectrolab)
library(ape)
library(phytools)
library(vegan)
library(usethis)
library(testthat)
library(devtools)
devtools::install_github("meireles/evolspec")
library(installr)
install.packages('installr')
library(installr)
devtools::install_github("meireles/evolspec")
?uninstall
install.packages('digest')
install.packages("digest")
devtools::install_github("meireles/evolspec")
library(spectrolab)
library(ape)
library(phytools)
spec = readRDS("Data/clean_all.rds")
spec = normalize(spec)
spec = aggregate(spec, by = meta(spec)$Name, mean, try_keep_txt(mean))
spec = readRDS("Data/clean_all.rds")
spec = normalize(spec)
spec = aggregate(spec, by = meta(spec)$Name, mean, try_keep_txt(mean))
spec = resample(spec, seq(400, 2400, by = 10))
#load tree
tree = read.tree(file = "Data/dryas_phylogeny.treefile")
install.packages('geiger')
library(geiger)
spec.m = as.matrix(spec)
meta_new = read.csv("Data/mean_meta_new.csv", stringsAsFactors = F)
rownames(spec.m) <- meta_new[, "genetic_name"]
spec = readRDS("Data/clean_all.rds")
spec = spec[!meta(spec)$Species_ID == "DX",]
spec = normalize(spec)
spec = aggregate(spec, by = meta(spec)$Name, mean, try_keep_txt(mean))
spec = resample(spec, seq(400, 2400, by = 10))
spec.m = as.matrix(spec)
meta_new = read.csv("Data/mean_meta_new.csv", stringsAsFactors = F)
rownames(spec.m) <- meta_new[, "genetic_name"]
#load tree
tree = read.tree(file = "Data/dryas_phylogeny.treefile")
matched_treedata = geiger::treedata(phy = tree, data = spec.m)
plot(tree)
spec_data = matched_treedata$data
phylo = matched_treedata$phy
?phylosig
View(spec_data)
sig = phylogsig(phylo, spec_data[,1], method = 'K', test = T, nsim = 2)
sig = phylosig(phylo, spec_data[,1], method = 'K', test = T, nsim = 2)
View(sig)
sig
sig = phylosig(phylo, spec_data, method = 'K', test = T, nsim = 2)
sig
sig = phylosig(phylo, spec_data[,100, method = 'K', test = T, nsim = 2)
sig = phylosig(phylo, spec_data[,100], method = 'K', test = T, nsim = 2)
sig
sig = phylosig(phylo, spec_data[,1], method = 'K', test = T, nsim = 999)
sig
sig[[1]]
sig[[2]]
k = c()
p = c()
for (i in 1:201){
sig = phylosig(phylo, spec_data[,i], method = 'K', test = T, nsim = 999)
sig.k = assign(paste0("sig.k",i), sig[[1]])
k <- append(k, get('sig.k'))
sig.p = assign(paste0('sig.p',i), sig[[2]])
p <- append(p, get('sig.p'))
}
k
plot(k)
################################################################################
#Plot phylogenetic signal
################################################################################
k1 = matrix()
?seq
rownames(k1) <- seq(400,2400, by = 10)
################################################################################
#Plot phylogenetic signal
################################################################################
k1 = matrix(nrow = 201)
rownames(k1) <- seq(400,2400, by = 10)
View(k1)
k1 = cbind(k1, k)
View(k1)
k.m = k1[,-1]
plot(k.m)
k.m
k2 = as.matrix(k.m)
k2
plot(k2)
?axis
k2 = as.matrix(k.m)
k2$num = seq(1,201, 10)
k2$num = seq(1,201, 1)
k1 = matrix(nrow = 201)
rownames(k1) <- seq(400,2400, by = 10)
k1 = cbind(k1, k)
k.m = k1[,-1]
k2 = as.matrix(k.m)
k2$num = seq(1,201, 1)
